// <auto-generated />
using System;
using HomeHavenAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HomeHavenAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240419110207_addedmore seed data2")]
    partial class addedmoreseeddata2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HomeHavenAPI.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Villa"
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "Lägenhet"
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "RadHus"
                        },
                        new
                        {
                            CategoryId = 4,
                            CategoryName = "FritidsBoende"
                        },
                        new
                        {
                            CategoryId = 5,
                            CategoryName = "Tomt"
                        });
                });

            modelBuilder.Entity("HomeHavenAPI.Models.Realtor", b =>
                {
                    b.Property<int>("RealtorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RealtorId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePictureURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RealtorFirmId")
                        .HasColumnType("int");

                    b.HasKey("RealtorId");

                    b.ToTable("Realtors");

                    b.HasData(
                        new
                        {
                            RealtorId = 1,
                            Email = "sofia.andersson@example.com",
                            FirstName = "Sofia",
                            LastName = "Andersson",
                            PhoneNumber = "070-1234567",
                            ProfilePictureURL = "URL",
                            RealtorFirmId = 1
                        },
                        new
                        {
                            RealtorId = 2,
                            Email = "erik.svensson@example.com",
                            FirstName = "Erik",
                            LastName = "Svensson",
                            PhoneNumber = "073-9876543",
                            ProfilePictureURL = "URL",
                            RealtorFirmId = 3
                        },
                        new
                        {
                            RealtorId = 3,
                            Email = "emma.johansson@example.com",
                            FirstName = "Emma",
                            LastName = "Johansson",
                            PhoneNumber = "076-1112233",
                            ProfilePictureURL = "URL",
                            RealtorFirmId = 2
                        },
                        new
                        {
                            RealtorId = 4,
                            Email = "anders.karlsson@example.com",
                            FirstName = "Anders",
                            LastName = "Karlsson",
                            PhoneNumber = "072-5554441",
                            ProfilePictureURL = "URL",
                            RealtorFirmId = 2
                        },
                        new
                        {
                            RealtorId = 5,
                            Email = "linnea.lindgren@example.com",
                            FirstName = "Linnea",
                            LastName = "Lindgren",
                            PhoneNumber = "074-8889990",
                            ProfilePictureURL = "URL",
                            RealtorFirmId = 5
                        });
                });

            modelBuilder.Entity("HomeHavenAPI.Models.RealtorFirm", b =>
                {
                    b.Property<int>("RealtorFirmId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RealtorFirmId"));

                    b.Property<string>("Descrpition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirmName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LogoURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RealtorFirmId");

                    b.ToTable("Firms");

                    b.HasData(
                        new
                        {
                            RealtorFirmId = 1,
                            Descrpition = "En mäklarfirm med fokus på att göra drömmar till verklighet för kunder genom att matcha dem med sitt perfekta hem.",
                            FirmName = "Dream Home Realty",
                            LogoURL = "URL"
                        },
                        new
                        {
                            RealtorFirmId = 2,
                            Descrpition = "Specialiserade på lyxiga och exklusiva fastigheter, erbjuder Elite Properties en förstklassig service för kunder som söker det bästa av det bästa.",
                            FirmName = "Elite Properties",
                            LogoURL = "URL"
                        },
                        new
                        {
                            RealtorFirmId = 3,
                            Descrpition = "Med starka förbindelser och expertis inom fastighetsmarknaden, strävar Prime Real Estate Solutions efter att hjälpa kunder att hitta de mest lönsamma fastighetsaffärerna.",
                            FirmName = "Prime Real Estate Solutions",
                            LogoURL = "URL"
                        },
                        new
                        {
                            RealtorFirmId = 4,
                            Descrpition = "Fokuserar på att skapa en \"näste\" åt sina kunder där de kan känna sig hemma och bekväma i den stadsmiljö de älskar.",
                            FirmName = "Urban Nest Realty",
                            LogoURL = "URL"
                        },
                        new
                        {
                            RealtorFirmId = 5,
                            Descrpition = "Tar sina kunder till nya horisonter genom att guida dem genom köp- och säljprocessen med en personlig och professionell approach.",
                            FirmName = "Horizon Homes Real Estate",
                            LogoURL = "URL"
                        });
                });

            modelBuilder.Entity("HomeHavenAPI.Models.Region", b =>
                {
                    b.Property<int>("RegionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RegionId"));

                    b.Property<string>("County")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Township")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RegionId");

                    b.ToTable("Regions");

                    b.HasData(
                        new
                        {
                            RegionId = 1,
                            County = "Stockholm",
                            Township = "Sollentuna"
                        },
                        new
                        {
                            RegionId = 2,
                            County = "Uppsala",
                            Township = "Östhammar"
                        },
                        new
                        {
                            RegionId = 3,
                            County = "Jönköpings",
                            Township = "Gislaved"
                        },
                        new
                        {
                            RegionId = 4,
                            County = "Kalmar",
                            Township = "Torsås"
                        },
                        new
                        {
                            RegionId = 5,
                            County = "Blekinge",
                            Township = "Karlskrona"
                        });
                });

            modelBuilder.Entity("HomeHavenAPI.Models.Residence", b =>
                {
                    b.Property<int>("ResidenceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ResidenceId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BiArea")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("ConstructionYear")
                        .HasColumnType("int");

                    b.Property<int>("LandArea")
                        .HasColumnType("int");

                    b.Property<int>("LivingArea")
                        .HasColumnType("int");

                    b.Property<decimal?>("MonthlyFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OperatingCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PictureListURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RealtorId")
                        .HasColumnType("int");

                    b.Property<int>("RegionId")
                        .HasColumnType("int");

                    b.Property<string>("ResidenceDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("RoomCount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("StartingPrice")
                        .HasColumnType("int");

                    b.HasKey("ResidenceId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("RealtorId");

                    b.HasIndex("RegionId");

                    b.ToTable("Residences");

                    b.HasData(
                        new
                        {
                            ResidenceId = 1,
                            Address = "Sveavägen 42",
                            BiArea = 20,
                            CategoryId = 1,
                            ConstructionYear = 2004,
                            LandArea = 500,
                            LivingArea = 120,
                            MonthlyFee = 4000m,
                            OperatingCost = 50000m,
                            PictureListURL = "[\"url\"]",
                            RealtorId = 5,
                            RegionId = 1,
                            ResidenceDescription = "Modern lägenhet med öppen planlösning och balkong belägen i centrala stan.",
                            RoomCount = 5m,
                            StartingPrice = 2000000
                        },
                        new
                        {
                            ResidenceId = 2,
                            Address = "Storgatan 12",
                            BiArea = 30,
                            CategoryId = 2,
                            ConstructionYear = 2000,
                            LandArea = 0,
                            LivingArea = 100,
                            MonthlyFee = 6500m,
                            OperatingCost = 24500m,
                            PictureListURL = "[\"url\"]",
                            RealtorId = 4,
                            RegionId = 2,
                            ResidenceDescription = "Charmigt radhus med trädgård och garage i lugnt bostadsområde nära naturen.",
                            RoomCount = 3m,
                            StartingPrice = 1250000
                        },
                        new
                        {
                            ResidenceId = 3,
                            Address = "Strandvägen 7",
                            BiArea = 0,
                            CategoryId = 3,
                            ConstructionYear = 2018,
                            LandArea = 1000,
                            LivingArea = 250,
                            MonthlyFee = 4250m,
                            OperatingCost = 32400m,
                            PictureListURL = "[\"url\"]",
                            RealtorId = 3,
                            RegionId = 3,
                            ResidenceDescription = "Funkisvilla med pool och havsutsikt på exklusiv adress vid kusten.",
                            RoomCount = 6m,
                            StartingPrice = 3000000
                        },
                        new
                        {
                            ResidenceId = 4,
                            Address = "Norra Vallgatan 14",
                            BiArea = 15,
                            CategoryId = 4,
                            ConstructionYear = 2009,
                            LandArea = 625,
                            LivingArea = 130,
                            MonthlyFee = 7000m,
                            OperatingCost = 31500m,
                            PictureListURL = "[\"url\"]",
                            RealtorId = 3,
                            RegionId = 2,
                            ResidenceDescription = "Gammal gård renoverad till lyxigt boende med generösa sällskapsytor och stor trädgård.",
                            RoomCount = 4m,
                            StartingPrice = 2230000
                        },
                        new
                        {
                            ResidenceId = 5,
                            Address = "Östra Hamngatan 3",
                            BiArea = 50,
                            CategoryId = 5,
                            ConstructionYear = 1972,
                            LandArea = 200,
                            LivingArea = 120,
                            MonthlyFee = 3750m,
                            OperatingCost = 20500m,
                            PictureListURL = "[\"url\"]",
                            RealtorId = 1,
                            RegionId = 5,
                            ResidenceDescription = "Lägenhet i nybyggd bostadsrättsförening med gemensam takterrass och närhet till shopping och kommunikationer.",
                            RoomCount = 5m,
                            StartingPrice = 1400000
                        });
                });

            modelBuilder.Entity("HomeHavenAPI.Models.Residence", b =>
                {
                    b.HasOne("HomeHavenAPI.Models.Category", "ResidenceCategory")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HomeHavenAPI.Models.Realtor", "ResidenceRealtor")
                        .WithMany()
                        .HasForeignKey("RealtorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HomeHavenAPI.Models.Region", "ResidenceRegion")
                        .WithMany()
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ResidenceCategory");

                    b.Navigation("ResidenceRealtor");

                    b.Navigation("ResidenceRegion");
                });
#pragma warning restore 612, 618
        }
    }
}
