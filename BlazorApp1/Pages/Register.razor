@page "/register"
@inject IAuthService AuthService
@inject NavigationManager NavigationManager

<div class="card formbox">
    <div class="card-body">
        <h4 class="card-title">Skapa ny användare</h4>
        <EditForm Model="registerModel" OnValidSubmit="RegisterHandler">
            <DataAnnotationsValidator />
            <div class="form-group">
                <label for="username">Användarnamn</label>
                <InputText Id="username" Class="form-control" @bind-Value="registerModel.UserName" />
                <ValidationMessage For="@(() => registerModel.UserName)" />
            </div>
            <div class="form-group">
                <label for="firstname">Förnamn</label>
                <InputText Id="firstname" Class="form-control" @bind-Value="registerModel.FirstName" />
                <ValidationMessage For="@(() => registerModel.FirstName)" />
            </div><div class="form-group">
                <label for="lastname">Efternamn</label>
                <InputText Id="efternamn" Class="form-control" @bind-Value="registerModel.LastName" />
                <ValidationMessage For="@(() => registerModel.LastName)" />
            </div>
            <div class="form-group">
                <label for="email">Email address</label>
                <InputText Id="email" Class="form-control" @bind-Value="registerModel.Email" />
                <ValidationMessage For="@(() => registerModel.Email)" />
            </div>
            <div class="form-group">
                <label for="password">Lösenord</label>
                <InputText Id="password" type="password" Class="form-control" @bind-Value="registerModel.Password" />
                <ValidationMessage For="@(() => registerModel.Password)" />
            </div>
            <div class="form-group">
                <label for="passwordValidation">Bekräfta Lösenord</label>
                <InputText Id="passwordValidation" type="password" Class="form-control" @bind-Value="registerModel.ConfirmPassword" />
                <ValidationMessage For="@(() => registerModel.ConfirmPassword)" />
            </div>
            @if(ShowErrors == true)
            {
                <p class="text-danger">@Error</p>
            }

            <button type="submit" class="btn btn-light btn-outline-dark mt-2">Skapa Användare</button>
        </EditForm>
    </div>
</div>


@code {
    private RegisterModel registerModel { get; set; } = new RegisterModel();
    private bool ShowErrors;
    private string Error = "En eller flera rader är ogiltiga";

    private async Task RegisterHandler()
    {
        ShowErrors = false;

        var result = await AuthService.Register(registerModel);

        if (result.Successful)
        {
            NavigationManager.NavigateTo("/login");
        }
        else
        {
            ShowErrors = true;
        }
    }
}
