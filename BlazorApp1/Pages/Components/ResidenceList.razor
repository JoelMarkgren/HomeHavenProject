@* Author: Jakob *@
@inject IResidenceService ResidenceService
<div class="row row-cols-1 row-cols-md-4 g-4">
@foreach (var Resi in Residences)
{

	
		<div class="col">
			<div class="card h-100">
				<img src="@Resi.MainPicture" class="card-img-top" alt="...">
				<div class="card-body">
					<h5 class="card-title">@Resi.Address</h5>
					<p class="card-text">@Resi.ResidenceRegion.Township, @Resi.ResidenceRegion.County</p>
					<p class="card-text">@Resi.StartingPrice kr</p>
					<p class="card-text">Antal rum: @Resi.RoomCount</p>
					<p class="card-text">@Resi.LivingArea m²</p>
					<p class="card-text">@Resi.ResidenceCategory.CategoryName</p>
					<a href="#" class="btn btn-primary">Visa</a>
				</div>
			</div>
		</div>
	

}
</div>

@code {
	[Parameter]
	public IEnumerable<ResidenceDto> DisplayResidences { get; set; } = new List<ResidenceDto>();

	public IEnumerable<ResidenceDto> Residences { get; set; } = new List<ResidenceDto>(); /* TestData tills filtercomponenten är klar , byt namn på listan i foreach loopen*/

	protected override async Task OnInitializedAsync()
	{
		DisplayResidences = await ResidenceService.GetAllAsync();
	}
}