@page "/login"
@inject IAuthService AuthService
@inject NavigationManager NavigationManager

<div class="card formbox">
    <div class="card-body">
        <h5 class="card-title">Inloggning</h5>
        <EditForm Model="loginModel" OnValidSubmit="LoginHandler">
            <DataAnnotationsValidator />

            <div class="form-group">
                <label for="email">Email:</label>
                <InputText Id="email" Class="form-control" @bind-Value="loginModel.Email" />
                <ValidationMessage For="@(() => loginModel.Email)" />
            </div>
            <div class="form-group">
                <label for="password">Lösenord:</label>
                <InputText Id="password" type="password" Class="form-control" @bind-Value="loginModel.Password" />
                <ValidationMessage For="@(() => loginModel.Password)" />
            </div>
            @if(IsValid == false)
            {
                <p class="text-danger">@Error</p>
            }
            <button type="submit" class="btn btn-light btn-outline-dark mt-2">Logga in</button>
        </EditForm> 
    </div>
</div>


@code {
    private LoginModel loginModel { get; set; } = new LoginModel();
    private bool IsValid = true;
    private string Error = "Email eller lösenord stämmer inte";

    private async Task LoginHandler()
    {
        IsValid = true;

        var result = await AuthService.Login(loginModel);

        if (result.Successful)
        {
            NavigationManager.NavigateTo("/");
        }
        else
        {
            IsValid = false;
        }  
    }
}
