@page "/realtor/requests"
@using System.IdentityModel.Tokens.Jwt
@using System.Text.Json
@inject IFirmRequestService FirmRequestService
@inject ILocalStorageService localstorage
@inject IRealtorService RealtorService

<div class="container firmRequest-box">
	<SendRequest RealtorFirmId="MyRealtorFirmId" FromEmail="@User.email"></SendRequest>

	<MyRequestsList MyRequests="MyRequests"></MyRequestsList>
	<hr />

	<MyInvitesList MyId="@User.Id" MyInvites="MyInvites"></MyInvitesList>
</div>



@code {

	public List<FirmRequest> MyInvites { get; set; } = new List<FirmRequest>();
	public List<FirmRequest> MyRequests { get; set; } = new List<FirmRequest>();
	public int MyProperty { get; set; }
	public UserJwt User { get; set; } = new UserJwt();
	public int MyRealtorFirmId { get; set; }

	protected async override Task OnInitializedAsync()
	{
		var token = await localstorage.GetItemAsync<string>("Token");
		if (token != null)
		{
			JwtSecurityTokenHandler handler = new JwtSecurityTokenHandler();
			JwtSecurityToken jwt = handler.ReadJwtToken(token);

			var jsonPayload = JsonSerializer.Serialize(jwt.Payload);
			User = JsonSerializer.Deserialize<UserJwt>(jsonPayload);
		}
		var realtor = await RealtorService.GetAsync(User.Id);
		MyRealtorFirmId = realtor.RealtorFirmId;

		var MyRequestsIenu = await FirmRequestService.GetAllInivtesAsync(User.email);
		MyRequests = MyRequestsIenu.ToList();

		var MyInvitesIenu = await FirmRequestService.GetAllRequestsAsync(User.email);
		MyInvites = MyInvitesIenu.ToList();
	}

}
